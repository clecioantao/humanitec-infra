name: Deploy Terraform Infrastructure using HCP

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      HCP_TERRAFORM_TOKEN: ${{ secrets.HCP_TERRAFORM_TOKEN }}
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

    steps:
      # Step 1: Checkout do repositÃ³rio
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Instalar o Terraform CLI
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false

      # Step 3: Autenticar no HCP Terraform
      - name: Configure Terraform authentication
        run: |
          mkdir -p ~/.terraform.d
          echo '{
            "credentials": {
              "app.terraform.io": {
                "token": "'"${HCP_TERRAFORM_TOKEN}"'"
              }
            }
          }' > ~/.terraform.d/credentials.tfrc.json
        env:
          HCP_TERRAFORM_TOKEN: ${{ secrets.HCP_TERRAFORM_TOKEN }}


      # Step 4: Inicializar o Terraform
      - name: Terraform Init
        run: |
          cd terraform
          terraform init

      # Step 5: Executar o Terraform Plan
      - name: Terraform Plan
        run: |
          cd terraform
          terraform plan -out=tfplan \
            -var "client_id=${ARM_CLIENT_ID}" \
            -var "client_secret=${ARM_CLIENT_SECRET}" \
            -var "subscription_id=${ARM_SUBSCRIPTION_ID}" \
            -var "tenant_id=${ARM_TENANT_ID}"

      # Step 6: Executar o Terraform Apply
      - name: Terraform Apply
        run: |
          cd terraform
          terraform apply -auto-approve tfplan
